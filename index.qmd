---
title: "CER-BEANS: Community Engaged Research Balanced Assessments and Expressions with Nuanced Scores"
subtitle: "A Framework for Constructing Quantitative Metrics for Community Engaged Research Projects"
author:
  - name: Jeremy F Price 
    url: https://www.jeremyfprice.info/
    affiliation: IU School of Education-Indianapolis
    affiliation_url: https://education.iupui.edu/
    orcid: 0000-0002-6506-3526
license: "CC BY-SA"
mainfont: domine
sansfont: rubik
monofont: "JetBrains Mono"
highlight-style: a11y
code-overflow: wrap
reference-location: margin
cap-location: margin
link-external-icon: false
link-external-newwindow: true
repo-url: https://github.com/jeremyfprice/cer-beans
citation:
  type: document
  issued: 2023
  url: https://github.com/jeremyfprice/cer-beans
google-scholar: true
---

```{r load-libraries, message = FALSE, warning=FALSE, echo = FALSE}
library(scales)
library(gt)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggpubr)
library(ggthemes)
library(glue)
library(ggrepel)
library(ggtext)
library(showtext)
```

```{r load-fonts, echo = FALSE, include=FALSE}
font_add_google("Rubik", "rubik", regular.wt = 700)
font_add_google("JetBrains Mono", "jetbrains", regular.wt = 700)
font_add_google("Domine", "domine", regular.wt = 700)
```

```{r setup, echo=FALSE}
category_scores_STEM <- data.frame(
  category_name = character(),
  category_impact_number = integer(),
  category_index = double(),
  category_score = integer()
  )

iu_palette = c(
  "#99000088",
  "#FFAA0088",
  "#00629888",
  "#59264D88",
  "#056E4188"
  )

category_levels <- c(
  "Participation",
  "Engagement",
  "Infrastructure",
  "Outputs",
  "Sustainability"
)
```

```{r define-functions, echo=FALSE}
add_category <- function(the_frame,
                         category_name,
                         impact_number,
                         component_score_1,
                         component_score_2) {
  the_frame <- the_frame |>
    add_row(
      category_name = category_name,
      category_impact_number = impact_number,
      category_index = round((component_score_1 + component_score_2) / 2,
        digits = 2
      )
    ) |>
    mutate(
      category_score = round((category_impact_number * (1 + category_index)), digits = 0)
    )
}

create_display_table <- function(the_frame,
                                 the_category,
                                 component_score_1,
                                 component_score_2,
                                 component_title_list) {
  the_table <- the_frame |>
    filter(category_name == the_category) |>
    pivot_longer(
      cols = c(
        "category_impact_number",
        "category_index",
        "category_score"
      ),
      names_to = "Component",
      values_to = "Value"
    ) |>
    select(-category_name) |>
    add_row(
      Component = "Component 1",
      Value = component_score_1,
      .after = 1
    ) |>
    add_row(
      Component = "Component 2",
      Value = component_score_2,
      .after = 2
    )
  the_table$Component <- component_title_list
  return(the_table)
}
```

## Introduction

> "Every little bean must be heard as well as seen!"
>
> --- Erich Maria Remarque, <cite>All Quiet on the Western Front</cite>

![A hill of important beans just waiting to be counted as imagined by Adobe Firefly](assets/hillofbeans2.jpg)

Quantitative measures capture only a small piece of the (bean) pie, but people
in academia ‚ù§Ô∏è&nbsp;**love**&nbsp;‚ù§Ô∏è putting numbers on things and counting them (beans).

Rather than sitting back and stewing like a pot of vegetarian chili while fretting
about whether or not faculty committees and administrators will count the kinds of
beans I hope they would count, I decided to create my own set of beans for them to
count. Therefore:

**Community Engaged Research Broad Evaluation and Assessments with Nuanced Scores
(CER-BEANS)**[CER-BEANS is pronounced "Sir&nbsp;Beans."]{.aside}

I was inspired by the [Altmetric badge](https://www.altmetric.com/), so I want to
make sure to create a system of beans that is:

1. Easy to grok and nice to look at.[To [grok](https://www.britannica.com/topic/grok) something is to understand it intuitively and deeply.]{.aside}
2. Authentic and meaningful to the work and experiences of community engaged researchers.
3. Usable as a critical framing for the kind of work community engaged researchers
should be focusing on.
4. Translatable, transferable, robust, resilient, dynamic, and extensible.

How 'bout *these* beans?

![An example of a detailed badge.](assets/detailed_badge.png)

Pretty [*radicle,*](https://en.wikipedia.org/wiki/Radicle) eh?

:::{.callout-note}

## If You Choose to Die on This Hill (of Beans)...

I am open to collaboration, dialogue, and disagreement. You can even
[open an issue](https://github.com/jeremyfprice/cer-beans/issues/new) if you'd
like to make it official. Contributions are welcomed, please read the 
[Code of Conduct](https://github.com/jeremyfprice/cer-beans/blob/main/CODE_OF_CONDUCT.md).
:::

## Identifying the Metrics

> "You never cook onions with your beans. That's a recipe for tear gas."
>
> --- Justin Swapp, <cite>The Shadow's Servant</cite>

![An image of medieval academics counting beans as imagined by Adobe Firefly](assets/beancounters3.jpg)

When evaluating community-engaged programs, it's important to consider various metrics that assess different aspects of the program's effectiveness and impact.

:::{.callout-warning}

## If You Had a Roomful of Awards that Didn't Mean Beans...

It is important to remember a number, a score, or even a collection or bean hill
of scores or numbers, *do not tell the whole story* of your community engaged research.
This framework is provided to *help you tell that story* using a system that is
easily recognizable and considered a valid form of evidence.

These numbers are a guidepost for your readers--or more likely--your evaluators.
:::

Now that I've provided the warning, remember that academics are first and foremost
makers of bean stalks[I make bean stalks, I'm<br />A builder, like yourself.<br />-- Edna St. Vincent Millay, [The Bean-Stalk](https://americanliterature.com/author/edna-st-vincent-millay/poem/the-bean-stalk)]{.aside}: we are trained to make cases and construct narratives.
Here are some tips for you to consider about what CER-BEANS *does* provide for
you as you construct a narrative around your work:

::: {.callout-tip}

## Ways to Build Bean Stalks

* ü™û **Reflection:** It provides an overall reflection on your work and where you have focused your energies. CER-BEANS gives you an indication of the impact your work has had, allowing you to discuss your successes.

* üì∏ **Snapshot:** It provides a snapshot of where you are in a longer process, what has worked well so far, and where you will be focusing your efforts in the near future.

* üó∫Ô∏è **Map:** It provides a rough map of where you and your collaborators, partners, and participants can take the work moving forward.

:::

CER-BEANS focuses on *five categories* and they each
result in an `category score`. Each of the category scores contribute to the
`overall score`. These are the five categories:

1. Participants
2. Engagement
3. Infrastructures
4. Outputs
5. Sustainability

Each of the `category scores` ($S_C$) follow a predictable pattern, that includes an
`impact number` ($I_C$) that is amplified by a set of **category component ratings** ($R_C$,
individual ratings represented by $r_{C1} \ldots r_C$). This is the general formula
for a `category score`:

$$
S_C = I_C \left(1 + \frac{\sum r_{C_1} \ldots r_{C_n}}{|R_C|}\right)
$$

The process for computing each of the `category scores` is essentially calculating the
average for the ratings in the category and then adding 1 to this average since
the ratings are between 0 and 1 and only numbers greater than 1 will amplify things.
The `amplifier score` is then multiplied by the `impact number`, which can be the
number of participants, contact hours, institutional partners, etc.

The categories contribute to the `overall score` ($S_O$) as a straight-forward
summation of all the category scores, where $s$ represents the `category scores`,
$x$ represents the set of categories, and $n$ is the number of categories:

$$
S_O = \sum_{x=1}^n s_x
$$

This `overall score` is  similar to the [Altmetric Attention Score](https://www.altmetric.com/about-us/our-data/donut-and-altmetric-attention-score/#:~:text=The%20Altmetric%20Attention%20Score%20is%20an%20automatically%20calculated,3%20main%20factors:) in that
it is a *weighted count*. The `overall score` increases 

Each of these categories and their components are described in some detail below. The
idea, the math, the concepts, are all licensed under a [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/) license[The code itself is licensed similarly under an [MIT License](https://github.com/jeremyfprice/cer-beans/blob/main/LICENSE).]{.aside}, so you are welcome to take these ideas and adapt them to your particular needs and preferences
(as long as you give credit where credit is due and share your adapted work alike).

## Participants

People Involved

```{r participants-frame, echo = FALSE}
participants_frame <- data.frame(
  marginalized_proportions = c(
    "No Marginalized Participants",
    "A Few Marginalized Participants",
    "Some Marginalized Participants",
    "Just Under Half Marginalized Participants",
    "About Half Marginalized Participants",
    "Just Over Half Marginalized Participants",
    "Mostly Marginalized Participants",
    "Predominantly Marginalized Participants",
    "Nearly All Marginalized Participants",
    "All Marginalized Participants"
  ),
  intersectionally_marginalized = c(
    "No Intersectionally Marginalized Participants",
    "A Few Intersectionally Marginalized Participants",
    "Some Intersectionally Marginalized Participants",
    "Just Under Half Intersectionally Marginalized Participants",
    "About Half Intersectionally Marginalized Participants",
    "Just Over Half Intersectionally Marginalized Participants",
    "Mostly Marginalized Intersectionally Participants",
    "Predominantly Intersectionally Marginalized Participants",
    "Nearly All Intersectionally Marginalized Participants",
    "All Marginalized Intersectionally Participants"
  ),
  participants_value = c(
    0.1,
    0.25,
    0.33,
    0.4,
    0.5,
    0.75,
    0.85,
    0.9,
    0.95,
    1
  ))
gt(participants_frame)
```

### Number of Participants

How many participants involved? This is $p_n$. For this example, there are **6 participants**.

```{r, echo = FALSE}
number_of_participants <- 7
```

### Marginalized Proportions Score

How many of the participants represent and come from marginalized identities and
communities? This is $p_m$.

Also, are you working directly with these marginalized  participants, or are you
working with others (such as teachers or health care workers) who are working with
these identities and communities?

```{r, echo = FALSE}
marginalized_proportions_value <- 1
marginalized_proportions_coefficient <- 1
```

### Intersectionally Marginalized Score

```{r}
intersectionally_marginalized_value <- 1
intersectionally_marginalized_coefficient <- 1
# 0.85 indicates one degree away, e.g., students of teachers, while 1 indicates
# direct engagement
```

### Calculate Participation Score

$$
p_s = p_n \left( 1 + \frac{(\beta_m \cdot p_m + \beta_i \cdot p_i)}{2} \right)
$$

```{r calculate-participant-score, echo = FALSE}

marginalized_proportions_value <- round(
  marginalized_proportions_value * marginalized_proportions_coefficient,
  digits = 2
)

intersectionally_marginalized_value <- round(
  intersectionally_marginalized_value * intersectionally_marginalized_coefficient,
  digits = 2
)

category_scores_STEM <- category_scores_STEM |>
  add_category(
    "Participation",
    number_of_participants,
    marginalized_proportions_value,
    intersectionally_marginalized_value
  )

participation_component_list <- c("Number of Participants",
                                  "Marginalized Participation Score",
                                  "Intersectionally Marginalized Participation Score",
                                  "Participation Category Index",
                                  "Participation Category Score")
rank_adjusted <- FALSE

if(marginalized_proportions_coefficient < 1) {
  participation_component_list[2] <- "Marginalized Participation Score*"
  rank_adjusted <- TRUE
}

if(intersectionally_marginalized_value < 1) {
  participation_component_list[3] <- "Intersectionally Marginalized Participation Score*"
  rank_adjusted <- TRUE
}

participation_table <- category_scores_STEM |>
  create_display_table(
    "Participation",
    marginalized_proportions_value,
    intersectionally_marginalized_value,
    participation_component_list
  )

participation_table <- participation_table |>
  gt()

if(rank_adjusted == TRUE) {
  participation_table <- participation_table |>
      tab_footnote(footnote = "*Adjusted scores.")
}

participation_table
```

## Engagement

Number of contact hours $e_h$.

```{r engagement-frame, echo=FALSE}
engagement_frame <- data.frame(
  frequency = c(
    "Once",
    "Once Per Year",
    "Several Times Per Year",
    "Every Other Month",
    "Once Per Month",
    "Every Other Week",
    "Once Per Week",
    "2-4 Times Per Week",
    "5 Times Per Week",
    "Daily"
  ),
    duration = c(
    "One Day",
    "Less Than A Week",
    "One Week",
    "2-3 Weeks",
    "One Month",
    "One Semester",
    "One Year",
    "2-3 Years",
    "3-10 Years",
    "10+ Years"
  ),
  value = c(
    0.1,
    0.25,
    0.33,
    0.4,
    0.5,
    0.75,
    0.85,
    0.9,
    0.95,
    1
  ))

engagement_frame |>
  gt()
```

### Engagement Hours

```{r}
engagement_hours <- 16
```

### Frequency

```{r frequency-score}
frequency_score <- 0.85
```
  
### Duration

```{r duration-score}
duration_score <- 0.75
```

### Calculate Engagement Score

$$
e_s = e_h \left(1 + \frac{(e_d + e_f)}{2}\right)
$$

```{r calculate-engagement-score}
category_scores_STEM <- category_scores_STEM |>
  add_category(
    "Engagement",
    engagement_hours,
    frequency_score,
    duration_score
  )

engagement_component_list <- c("Number of Contact Hours",
                                  "Frequency Component Score",
                                  "Duration Component Score",
                                  "Engagement Category Index",
                                  "Engagement Category Score")

engagement_table <- category_scores_STEM |>
  create_display_table(
    "Engagement",
    frequency_score,
    duration_score,
    engagement_component_list
  )

engagement_table |>
  gt()
```

## Infrastructure Score

```{r infrastructure-frame, echo=FALSE}
infrastructure_frame <- data.frame(
  purpose = c(
    "Promoting Efficiency Only",
    "Promoting Predominantly Efficiency And Recognizing Plurality and Multivocality",
    "Promoting Mostly Efficiency And Recognizing Plurality and Multivocality",
    "Promoting Mostly Efficiency And Recognizing Plurality, Multivocality, and Honor",
    "Promoting Efficiency, Plurality, Multivocality, and Honor Equitably"
  ),
    co_construction = c(
    "Initiation and Construction From One Party",
    "Initiation and Construction From One Party With Feedback By Another",
    "Initiation From One Party and Construction By Another",
    "Initiated and Constructed Mostly Equitably",
    "Initiated and Constructed Equitably"
  ),
  value = c(
    0.1,
    0.5,
    0.9,
    0.95,
    1
  ))

infrastructure_frame |>
  gt()
```

### Number of Intrastructure/Intermediate Products

```{r}
number_of_infrastructure_products <- 8
```

### Infrastructure Purpose
```{r}
infrastructure_purpose <- 0.90
```

### Infrastructure Co-Construction
```{r}
infrastructure_co_construction <- 0.10
```

### Calculate Infrastructure Score

$$
i_s = i_p \left(1 + \frac{(i_u + i_c)}{2}\right)
$$

```{r calculate-infrastructure-score}
category_scores_STEM <- category_scores_STEM |>
  add_category(
    "Infrastructure",
    number_of_infrastructure_products,
    infrastructure_purpose,
    infrastructure_co_construction
  )

infrastructure_component_list <- c("Number of Infrasctructure Products",
                                  "Infrastructure Purpose Score",
                                  "Infrastructure Co-Construction Score",
                                  "Infrastructure Category Index",
                                  "Infrastructure Category Score")

infrastructure_table <- category_scores_STEM |>
  create_display_table(
    "Infrastructure",
    infrastructure_purpose,
    infrastructure_co_construction,
    infrastructure_component_list
  )

infrastructure_table |>
  gt()
```

## Outputs Score

```{r outputs-frame, echo=FALSE}
outputs_frame <- data.frame(
  venues = c(
    "Only One Type of Venue",
    "Predominantly One Type of Venue",
    "Mostly One Type of Venue",
    "Almost Even Mix of Venues",
    "Even Mix of Venues"
  ),
    inclusion = c(
    "No Inclusion",
    "Member Check Opportunities",
    "Inclusion in Writing",
    "Inclusion in Data Curation, Analysis, and Writing",
    "Full Partnership"
  ),
  value = c(
    0.10,
    0.50,
    0.90,
    0.95,
    1
  ))

outputs_frame |>
  gt()
```

### Number of Outputs Products

```{r}
number_of_outputs <- 1
```

### Distribution of Venues

```{r}
distribution_of_venues <- 0.10
```

### Inclusion of Participants and Partners

```{r}
inclusion_of_participants <- 0.90
```

### Calculate Outputs Score

$$
o_s = o_p \left(1 + \frac{(o_v + o_i)}{2}\right)
$$

```{r calculate-outputs-score}
category_scores_STEM <- category_scores_STEM |>
  add_category(
    "Outputs",
    number_of_outputs,
    distribution_of_venues,
    inclusion_of_participants
  )

outputs_component_list <- c("Number of Output Products",
                                  "Distribution of Venues Score",
                                  "Inclusion of Participants Score",
                                  "Outputs Category Index",
                                  "Outputs Category Score")

outputs_table <- category_scores_STEM |>
  create_display_table(
    "Outputs",
    distribution_of_venues,
    inclusion_of_participants,
    outputs_component_list
  )

outputs_table |>
  gt()
```

## Sustainability

```{r sustainability-frame, echo=FALSE}
sustainability_frame <- data.frame(
  responsibility = c(
    "Responsibility Distributed to One Partner",
    "Responsibility Predominantly Distributed to One Partner",
    "Responsibility Mostly Distributed to One or More Partners",
    "Almost Equitable Distribution of Responsibility Across Partners",
    "Equitable Distribution of Responsibility Across Partners"
  ),
    material = c(
    "No Material Support",
    "Material Support Predominantly Through One Partner",
    "Material Support Mostly Through One or More Partners",
    "Material Support Almost Equitably Distributed Across Partners",
    "Equitable Material Support Across Partners"
  ),
  value = c(
    0.1,
    0.5,
    0.9,
    0.95,
    1
  ))

sustainability_frame |>
  gt()
```

### Number of Institutional Partners

```{r}
number_of_partners <- 2
```

### Distribution of Responsibility

```{r}
distribution_of_responsibility <- 0.5
```

### Distribution of Material Support

```{r}
distribution_of_material_support <- 0.5
```

### Calculate Sustainability Score

$$
s_s = s_p \left(1 + \frac{(s_r + s_m)}{2}\right)
$$

```{r calculate-sustainability-score}
category_scores_STEM <- category_scores_STEM |>
  add_category(
    "Sustainability",
    number_of_partners,
    distribution_of_responsibility,
    distribution_of_material_support
  )

sustainability_component_list <- c("Number of Partners",
                                  "Distribution of Responsibiilty Score",
                                  "Distribution of Material Support Score",
                                  "Sustainability Category Index",
                                  "Sustainability Category Score")

sustainability_table <- category_scores_STEM |>
  create_display_table(
    "Sustainability",
    distribution_of_responsibility,
    distribution_of_material_support,
    sustainability_component_list
  )

sustainability_table |>
  gt()
```

## Overall Score

> "Red Beans and Ricely Yours"
>
> -- Louis Armstrong

!["Here are my beans, come count them!" As imagined by Adobe Firefly.](assets/introbeans.jpg)

$$
S_O = \sum_{x=1}^n s_x
$$

```{r}
overall_score <- sum(category_scores_STEM$category_score)
```

The Overall Score $S_O$ for the STEM Studio is `r overall_score`.

## Overall Representation

```{r represent, fig.showtext=TRUE, warning=FALSE, message=FALSE, echo=FALSE}

category_names <- c(
  "Sustainability",
  "Outputs",
  "Infrastructure",
  "Engagement",
  "Participation"
)

donut_labels <- vector()

for (i in 1:5) {
  donut_labels[i] <- glue(
    "{category_scores_STEM$category_name[i]}\n{category_scores_STEM$category_index[i]}"
    )
}

donut_frame <- data.frame(
  names = category_levels,
  label = donut_labels,
  score = category_scores_STEM$category_index
)

donut_frame$names <- factor(
  donut_frame$names,
  levels = category_levels
)

bean_donut <- ggdonutchart(
  donut_frame, "score",
  fill = "names", color = "#EDEBEB",
  palette = iu_palette,
  lab.font = "#191919",
  font.family = "rubik"
  ) +
  annotate(
    geom = "text",
    x = 0.5,
    y = 0,
    label = overall_score,
    size = 18,
    family = "jetbrains"
    ) +
  theme(
    legend.position = "none",
    panel.background = element_rect(fill='transparent'),
    plot.background = element_rect(fill='transparent', color=NA),
    axis.ticks = element_blank()
    )

raw_impacts <- c(
  "Participants",
  "Hours",
  "Infrastructures",
  "Outputs",
  "Partners"
)

raw_labels <- vector()

for (i in 1:5) {
  raw_labels[i] <- glue(
    "{category_scores_STEM$category_impact_number[i]} {raw_impacts[i]}"
    )
}

raw_frame <- data.frame(
  names = category_levels,
  label = raw_labels,
  values = category_scores_STEM$category_impact_number,
  bean = c("BEAN", "BEAN", "BEAN", "BEAN", "BEAN")
)

raw_frame$names <- factor(
  raw_frame$names,
  levels = rev(category_levels)
)

raw_frame$values_adjusted <- rescale(raw_frame$values, to = c(3,100))

raw_bar <- ggplot(raw_frame, aes(x = bean, y = values_adjusted, fill = names)) +
  geom_bar(
    stat = "identity",
    width = 1,
    color = "#EDEBEB"
    ) +
  coord_flip() +
  scale_fill_manual(values = rev(iu_palette)) +
  theme_light() +
  theme(legend.position = "none",
        axis.title = element_blank(),
        axis.text = element_blank(),
        panel.border = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
    panel.background = element_rect(fill='transparent'),
    plot.background = element_rect(fill='transparent', color=NA)
    )

label_frame <- data.frame(
  x = 1,
  y = 2,
  label = glue(
    "<span style='color:#99000088;'>‚ñà</span> <span style='color:#990000;'><b>{category_scores_STEM$category_impact_number[1]}</b></span> Participants <span style='color:#FFAA0088;'>‚ñà</span> <span style='color:#FFAA00;'><b>{category_scores_STEM$category_impact_number[2]}</b></span> Engagement Hours <span style='color:#00629888;'>‚ñà</span> <span style='color:#006298;'><b>{category_scores_STEM$category_impact_number[3]}</b></span> Infrastructure Products <span style='color:#59264D88;'>‚ñà</span> <span style='color:#59264D;'><b>{category_scores_STEM$category_impact_number[4]}</b></span> Outputs <span style='color:#056E4188;'>‚ñà</span> <span style='color:#056E41;'><b>{category_scores_STEM$category_impact_number[5]}</b></span> Partners"
    )
  )

label_line <- ggplot(
  label_frame,
  aes(
    x = x,
    y = y,
    label = label
    )
  ) +
  geom_richtext(
    fill = NA,
    label.color = NA,
    color = "#191919",
    size = 3.5
  ) +
  theme_light() +
  theme(
    legend.position = "none",
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    panel.border = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.background = element_rect(fill='transparent'),
    plot.background = element_rect(fill='transparent', color=NA)
    )
credit_frame <- data.frame(
  x = 1,
  y = 1,
  label = glue("Community Engaged Research Balanced Assessments and Expressions with Nuanced Scores -- Generated {Sys.Date()} -- CC BY-NC-SA 4.0")
)
credit_line <- ggplot(
  credit_frame,
  aes(
    x = x,
    y = y,
    label = label
    )
  ) +
  geom_richtext(
    fill = NA,
    label.color = NA,
    color = "#191919",
    size = 2.5
  ) +
  theme_light() +
  theme(
    legend.position = "none",
        axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.border = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
    panel.background = element_rect(fill='transparent'),
    plot.background = element_rect(fill='transparent', color=NA)
    )

detailed_badge <- ggarrange(
  bean_donut,
  raw_bar,
  label_line,
  credit_line,
  ncol = 1,
  nrow = 4,
  heights = c(8, 1, 1, 1)
  )
ggsave(
  detailed_badge,
  filename = "assets/detailed_badge.png",
  dpi = 320,
  width = 8,
  height = 8,
  units = "in"
  )
```

### Detailed Badge

![An example of a detailed badge. This badge contains multiple levels of information including the total score, individual scores, and raw scores.](assets/detailed_badge.png)
